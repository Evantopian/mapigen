"""
Auto-generated functional integration tests for the pokeapi/pokeapi service.

This file was generated by the `utils/generate_integration_tests.py` script.
It dynamically discovers operations and generates test cases with sampled
parameters to verify that the client can communicate with the endpoints.
"""
import pytest
from dotenv import load_dotenv
from typing import Any, List, Dict, Tuple

from mapigen import Mapi
from ..reporting import run_test_operation

load_dotenv()

PROVIDER_NAME = "pokeapi"
API_NAME = "pokeapi"

# A list of test cases, where each case is a tuple of:
# (operation_name, test_case_name, parameters_dict)
TEST_CASES: List[Tuple[str, str, Dict[str, Any]]] = [
("api_v2_ability_list", "api_v2_ability_list", {'limit': 1, 'offset': 1, 'q': 'test_q'}),
("api_v2_evolution_trigger_list", "api_v2_evolution_trigger_list", {'limit': 1, 'offset': 1, 'q': 'test_q'}),
("api_v2_machine_list", "api_v2_machine_list", {'limit': 1, 'offset': 1, 'q': 'test_q'}),
("api_v2_pokemon_color_list", "api_v2_pokemon_color_list", {'limit': 1, 'offset': 1, 'q': 'test_q'}),
("api_v2_version_retrieve", "api_v2_version_retrieve", {'id': 'test_id'}),
]

@pytest.fixture(scope="module")
def client() -> Mapi:
    """
    Pytest fixture to initialize the Mapi client for the pokeapi service.
    This fixture is a placeholder and may need to be updated with authentication
    details for the service.
    """
    # TODO: Add authentication logic if required by the service.
    return Mapi()

@pytest.mark.parametrize("op_name, case_name, params", TEST_CASES)
def test_sampled_operation(client: Mapi, op_name: str, case_name: str, params: Dict[str, Any]):
    """
    Dynamically tests an operation with a sampled set of parameters.
    The test case name (e.g., 'min_params') is included for clarity.
    """
    operations_checked: List[str] = []

    def generic_assertion(data: Any):
        """A generic assertion that passes as long as the call completes."""
        assert data is not None

    run_test_operation(
        client=client,
        provider_name=PROVIDER_NAME,
        api_name=API_NAME,
        op_name=op_name,
        operations_checked=operations_checked,
        assertion_callback=generic_assertion,
        **params
    )